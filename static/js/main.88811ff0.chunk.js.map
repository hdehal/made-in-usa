{"version":3,"sources":["components/tableColumns.js","components/stitchAuth.js","components/maps.js","components/home.js","components/addForm.js","components/displayAlerts.js","components/add.js","components/about.js","components/error.js","components/displayCount.js","components/twemoji.js","components/navigation.js","components/displayTable.js","components/scrollTop.js","App.js","index.js"],"names":["nameFilter","mongoClient","Stitch","hasAppClient","getAppClient","initializeDefaultAppClient","getServiceClient","RemoteMongoClient","factory","credential","UserApiKeyCredential","process","isAuthed","collection","item","Promise","resolve","reject","defaultAppClient","auth","loginWithCredential","then","authedId","db","catch","err","itemModify","Maps","props","state","dataMaps","setState","console","warn","find","toArray","this","getData","screensizeZoom","window","innerWidth","Map","style","height","width","opacity","zoom","maxZoom","center","attributionControl","TileLayer","url","attribution","AttributionControl","position","prefix","spiderfyDistanceMultiplier","showCoverageOnHover","maxClusterRadius","map","dataItem","k","coordinates","company","loc","CircleMarker","onClick","open","key","Tooltip","direction","offset","href","Component","home","provider","OpenStreetMapProvider","AddForm","checkboxOnChange","event","name","target","prevState","checkboxIds","includes","filter","id","sort","animateSubmit","handleRecaptureComplete","value","isCaptchaVerified","onChangeCompanyName","bind","onChangeUrl","onChangeLoc","onChangeGender","handleSubmit","onDelete","onChangeisVerified","registerRecaptcha","React","createRef","checkboxes","gender","isVerified","e","checked","preventDefault","a","search","query","result","length","locYX","y","x","newItem","tags","insertOne","log","insertedId","error","document","getElementById","selectedIndex","selected","ObjectId","deleteOne","deletedCount","resetRecaptcha","reset","setTimeout","className","onSubmit","Form","Group","Label","Control","type","size","onChange","placeholder","required","multiple","checkbox","Check","inline","label","disabled","sitekey","ref","el","Button","Spinner","as","animation","role","aria-hidden","marginRight","variant","DisplayAlerts","onClickAlert","setShowAlert","Alert","show","dismissible","Heading","Add","About","to","rel","icon","faReact","faBootstrap","faMapMarkerAlt","faCloud","faGithub","Error","DisplayCount","totalItems","count","Badge","start","end","delay","countUpRef","memo","emoji","dangerouslySetInnerHTML","__html","twemoji","parse","folder","ext","Navigation","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","sortFunc","order","column","tableColumns","dataField","text","hidden","sortCaret","headerStyle","colIndex","minWidth","formatter","rowContent","row","cell","OverlayTrigger","placement","overlay","pill","textFilter","getFilter","onkeydown","evt","keyCode","DisplayTable","data","_id","toString","keyField","columns","filterFactory","defaultSorted","striped","hover","condensed","bootstrap4","ScrollTop","scrollFunc","showScrollTop","addEventListener","removeEventListener","scrollY","scrollTo","top","behavior","visibility","faChevronUp","ReactGA","initialize","pageview","location","pathname","App","handleOnSelect","isSelect","basename","path","component","Home","exact","handleOnSelectProp","ReactDOM","render"],"mappings":"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","file":"static/js/main.88811ff0.chunk.js","sourcesContent":["import React from 'react';\nimport { textFilter } from 'react-bootstrap-table2-filter';\nimport Badge from 'react-bootstrap/Badge';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Tooltip from 'react-bootstrap/Tooltip'\nimport Twemoji from './twemoji'\n\n// Define sortCaret\nconst sortFunc = (order, column) => {\n    if (!order) return (<span className=\"order\"><span className=\"dropdown\"><span className=\"caret\"></span></span><span className=\"dropup\"><span className=\"caret\"></span></span></span>);\n    else if (order === 'asc') return (<span className=\"react-bootstrap-table-sort-order\"><span className=\"caret\"></span></span>);\n    else if (order === 'desc') return (<span className=\"react-bootstrap-table-sort-order dropup\"><span className=\"caret\"></span></span>);\n    return null;\n}\n\n// JSON table column data\nlet nameFilter;\n\nexport const tableColumns = [\n    {\n        dataField: 'id',\n        text: 'ID',\n        hidden: true\n\n    }, {\n        dataField: 'company',\n        text: 'Company',\n        sort: true,\n        sortCaret: sortFunc,\n        headerStyle: (column, colIndex) => {\n            return { minWidth: '175px' };\n        }\n    }, {\n        dataField: 'url',\n        text: 'URL',\n        sort: true,\n        sortCaret: sortFunc,\n        formatter: (rowContent, row) => { return <><a href={rowContent} target=\"_blank\" rel=\"noopener noreferrer\">{rowContent}</a></>; }\n    }, {\n        dataField: 'loc',\n        text: 'Location',\n        sort: true,\n        sortCaret: sortFunc,\n        headerStyle: (column, colIndex) => {\n            return { minWidth: '175px' };\n        }\n    }, {\n        dataField: 'gender',\n        text: 'Gender',\n        sort: true,\n        sortCaret: sortFunc,\n        headerStyle: (column, colIndex) => {\n            return { minWidth: '120px' };\n        }\n    }, {\n        dataField: 'tags',\n        text: <span className='tagsLabel'>Tags</span>,\n        sort: true,\n        sortCaret: sortFunc,\n        formatter: (cell) => {\n            return cell.map(x => {\n                return <>\n                    <OverlayTrigger\n                        key=\"top\"\n                        placement=\"top\"\n                        overlay={\n                            <Tooltip>\n                                {x === 'Accessories' ? \"Bags, belts, sunglasses, etc.\"\n                                    : x === 'Bottoms' ? \"Pants, shorts, skirts, etc.\"\n                                        : x === 'Dresses' ? <><Twemoji emoji=\"👗\" /></>\n                                            : x === 'Formal' ? \"Blazers, suits, etc.\"\n                                                : x === 'Shoes' ? <><Twemoji emoji=\"👟\" /></>\n                                                    : x === 'Sports' ? <><Twemoji emoji=\"🏃‍♀️\" /></>\n                                                        : x === 'Swim' ? \"Bikinis, trunks, etc.\"\n                                                            : x === 'Tops' ? \"Shirts, OCBD, etc.\"\n                                                                : x === 'Undergarments' ? \"Socks, underwear, etc.\"\n                                                                    : null}\n                            </Tooltip>\n                        }\n                    >\n                        <Badge pill variant=\"primary\">{x}</Badge>\n                    </OverlayTrigger></>;\n            });\n        },\n        filter: textFilter({\n            className: 'form-control-sm',\n            placeholder: 'Search by tag',\n            // onClick: e => console.log(e)\n            getFilter: (filter) => {\n                nameFilter = filter;\n            }\n        }),\n    }];\n\ndocument.onkeydown = function (evt) {\n    evt = evt || window.event;\n    var isEscape = false;\n    if (\"key\" in evt) {\n        isEscape = (evt.key === \"Escape\" || evt.key === \"Esc\");\n    } else {\n        isEscape = (evt.keyCode === 27);\n    }\n    if (isEscape) {\n        // console.log(\"Escape key pressed\")\n        nameFilter('');\n    }\n};","import { Stitch, RemoteMongoClient, UserApiKeyCredential } from 'mongodb-stitch-browser-sdk';\n\n// Define MongoDB Stitch App ID\nexport const APP_ID = \"miusa-gxhmx\";\n\n// Initialize MongoDB Stitch\nexport const app = Stitch.hasAppClient(APP_ID)\n    ? Stitch.getAppClient(APP_ID)\n    : Stitch.initializeDefaultAppClient(APP_ID);\n    // OR for anonymous login use:\n    // Stitch.initializeAppClient(APP_ID); \n\n// Define client/factory\nexport const mongoClient = app.getServiceClient(\n    RemoteMongoClient.factory,\n    \"mongodb-atlas\"\n  );\n\n// API authentication\n// https://stitch.mongodb.com > (your app) > Users > Providers > API Key (On) && Users > Add\n// This API key has DB read-write access only, DB delete functionality is disabled, all entries will be queued to be approved by the admin\nconst credential = new UserApiKeyCredential(process.env.REACT_APP_STITCH_API_KEY)\n\n// Define db and collection -- READ\nvar isAuthed = false;\nvar collection = null;\nexport const item = () => { \n  return new Promise((resolve, reject) => { \n    if(isAuthed) { resolve(collection); } \n    else { \n      Stitch.defaultAppClient.auth.loginWithCredential(credential)\n      .then(authedId => { isAuthed = true; collection = mongoClient.db(\"vendor\").collection(\"vendor-item\"); resolve(collection); })\n      .catch(err => reject(err));\n    }\n  });\n};\n\n// Define db and collection -- WRITE and DELETE\nexport const itemModify = mongoClient.db(\"vendor\").collection(\"vendor-item\");\n","import React, { Component } from 'react';\nimport { item } from './stitchAuth';\nimport { Map, CircleMarker, TileLayer, Tooltip, AttributionControl } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nimport \"react-leaflet-markercluster/dist/styles.min.css\";\n\n/* Adapted from https://github.com/afzalsayed96/bubbles-map by Afzal Sayed  */\n/* Map tiles proudly from Stamen Design in San Francisco https://stamen.com/maps/ */\n/* Additional help from http://leaflet-extras.github.io/leaflet-providers/preview/ */\n/* Cluster functionality from https://www.npmjs.com/package/react-leaflet-markercluster */\n\nclass Maps extends Component {\n\n  // Initial state\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dataMaps: []\n    }\n  }\n\n  // Find database documents\n  async getData() {\n    (await item())\n      .find({ \"isVerified\": true })\n      .toArray()\n      .then(dataMaps => this.setState({ dataMaps }))\n\n      // Error logging\n      .catch(err => {\n        console.warn(\"Error:\", err);\n      });\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n\n    // Render map default zoom based on mobile breakpoint\n    const isMobile = window.innerWidth < 480;\n    const screensizeZoom = isMobile ? 3 : 4.25;\n\n    return (\n      <div>\n        <Map\n          style={{ height: \"480px\", width: \"100%\", opacity: \"0.9\" }}\n          zoom={screensizeZoom}\n          maxZoom={20}\n          center={[37.7687477, -99.6820275]}\n          attributionControl={false}>\n          <TileLayer url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-lite/{z}/{x}/{y}{r}.png\"\n            attribution=\"Map by <a href='http://stamen.com' target='_blank'>Stamen Design</a> | &copy; <a href='https://www.openstreetmap.org/copyright' target='_blank'>OpenStreetMap</a> contributors\"\n          />\n\n          <AttributionControl position=\"bottomright\" prefix={false} />\n\n          <MarkerClusterGroup\n            spiderfyDistanceMultiplier={1}\n            showCoverageOnHover={false}\n            maxClusterRadius={35}\n          >\n            {this.state.dataMaps.map((dataItem, k) => {\n              let { coordinates, company, url, loc } = dataItem;\n              return (\n                <CircleMarker onClick={() => { window.open(url) }}\n                  key={k}\n                  center={[coordinates[0], coordinates[1]]}\n                  position={[coordinates[0], coordinates[1]]}\n                >\n                  <Tooltip direction=\"right\" offset={[-8, -2]} opacity={1}>\n                    <span><a href={url}>{company}</a></span>\n                    <span>{loc}</span>\n                  </Tooltip>\n                </CircleMarker>);\n            })}\n          </MarkerClusterGroup>\n        </Map>\n      </div>\n    );\n  }\n}\n\nexport default Maps;","import React from 'react';\nimport Maps from './maps';\n\nconst home = () => {\n    return (\n        <Maps />\n    );\n}\n\nexport default home;","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner'\nimport { ObjectId } from 'bson';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport \"leaflet/dist/leaflet.css\";\nimport { OpenStreetMapProvider } from 'leaflet-geosearch';\n\n// Modularized component imports\nimport { itemModify } from './stitchAuth';\n\n// Provider for leaflet-geosearch plugin\nconst provider = new OpenStreetMapProvider();\n\nclass AddForm extends Component {\n\n  // Initial state\n  constructor(props) {\n    super(props);\n\n    this.onChangeCompanyName = this.onChangeCompanyName.bind(this);\n    this.onChangeUrl = this.onChangeUrl.bind(this);\n    this.onChangeLoc = this.onChangeLoc.bind(this);\n    this.onChangeGender = this.onChangeGender.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n    this.onChangeisVerified = this.onChangeisVerified.bind(this);\n\n    this.registerRecaptcha = React.createRef();\n\n    this.state = {\n      // States for checkboxes\n      checkboxes: [{ id: \"Accessories\" }, { id: \"Bottoms\" }, { id: \"Dresses\" }, { id: \"Formal\" }, { id: \"Shoes\" }, { id: \"Sports\" }, { id: \"Swim\" }, { id: \"Tops\" }, { id: \"Undergarments\" }],\n      checkboxIds: [],\n      // States below to prevent input elements from switching from uncontrolled to controlled \n      company: '',\n      url: '',\n      loc: '',\n      gender: '',\n      isCaptchaVerified: false,\n      isVerified: false,\n      animateSubmit: false\n    }\n  }\n\n  // Form fields onChange\n  onChangeCompanyName(e) {\n    this.setState({\n      company: e.target.value\n    });\n  }\n  onChangeUrl(e) {\n    this.setState({\n      url: e.target.value\n    });\n  }\n  onChangeLoc(e) {\n    this.setState({\n      loc: e.target.value\n    });\n  }\n  onChangeGender(e) {\n    this.setState({\n      gender: e.target.value\n    });\n  }\n  onChangeisVerified(e) {\n    this.setState({\n      isVerified: e.target.checked\n    });\n  }\n\n  // Checkboxes onChange\n  checkboxOnChange = event => {\n    const { name } = event.target;\n    this.setState(prevState => {\n      const { checkboxIds } = prevState;\n      if (checkboxIds.includes(name)) {\n        return { checkboxIds: checkboxIds.filter(id => id !== name) };\n      } else {\n        return { checkboxIds: [...checkboxIds, name].sort() };\n      }\n    });\n  };\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    // Convert \"City, State\" or \"ZIP\" to lat/long coordinates using leaflet-geosearch plugin \n    (async () => {\n      let result = await provider.search({ query: this.state.loc });\n      if (result && result.length > 0) {\n        const locYX = [result[0].y, result[0].x];\n        // Define array to inserted into the database\n        var newItem = { company: this.state.company, url: this.state.url, loc: this.state.loc, coordinates: locYX, gender: this.state.gender, tags: this.state.checkboxIds, isVerified: this.state.isVerified }\n      }\n\n      // Insert new item\n      itemModify.insertOne(newItem)\n        .then(result => console.log(`Successfully inserted item with _id: ${result.insertedId}`))\n        .catch(err => console.error(`Failed to insert item: ${err}`))\n\n      // Reset and clear the forms\n      // Stop submit button animation when done inserting\n      this.setState({\n        id: '',\n        company: '',\n        url: '',\n        loc: '',\n        gender: '',\n        checkboxIds: [],\n        isCaptchaVerified: false,\n        isVerified: false,\n        animateSubmit: false\n      })\n\n      // Reset the select option to the default null value or index\n      document.getElementById(\"genderSelect\").selectedIndex = \"0\";\n\n    })();\n  }\n\n  // Delete items in MongoDB Atlas\n  onDelete(e) {\n    console.log(this.props.selected)\n    const query = { \"_id\": new ObjectId(this.props.selected) };\n\n    itemModify.deleteOne(query)\n      .then(result => console.log(`Deleted ${result.deletedCount} item(s).`))\n      .catch(err => console.error(`Delete failed with error: ${err}`))\n    // getData after deleting item\n    // this.getData();\n  }\n\n  // Animate submit button onClick\n  animateSubmit = () => {\n    this.setState({\n      animateSubmit: true\n    });\n  }\n\n  // Captcha Verification\n  handleRecaptureComplete = (value) => {\n    this.setState({ isCaptchaVerified: true })\n  }\n\n  render() {\n\n    // Define checkboxes state\n    const { checkboxes, checkboxIds } = this.state;\n\n    // Define animateSubmit state\n    const { animateSubmit } = this.state;\n\n    // Reset and re-generate Captcha\n    const resetRecaptcha = () => {\n      this.registerRecaptcha.reset();\n\n      setTimeout(() => {\n        this.setState({\n          isCaptchaVerified: false,\n          animateSubmit: false\n        });\n      }, 2000);\n\n    };\n\n    return (\n      <div className=\"mainContainer\">\n        <h4>Add New Company</h4>\n        <form onSubmit={this.handleSubmit}>\n          <Form.Group>\n            <Form.Label>Company Name:</Form.Label>\n            <Form.Control\n              type=\"text\"\n              size=\"sm\"\n              value={this.state.company}\n              onChange={this.onChangeCompanyName}\n              placeholder=\"Example Corp\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>URL:</Form.Label>\n            <Form.Control\n              type=\"text\"\n              size=\"sm\"\n              value={this.state.url}\n              onChange={this.onChangeUrl}\n              placeholder=\"https://www.example.com\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Location:</Form.Label>\n            <Form.Control\n              type=\"text\"\n              size=\"sm\"\n              value={this.state.loc}\n              onChange={this.onChangeLoc}\n              placeholder=\"City, State\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Gender:</Form.Label>\n            <select\n              required\n              id=\"genderSelect\"\n              className=\"form-control dropdown-toggle btn btn-secondary\"\n              onChange={this.onChangeGender}\n              multiple={false}\n            >\n              <option value=\"\">Select One</option>\n              <option value=\"Everyone\">Everyone</option>\n              <option value=\"Men\">Men</option>\n              <option value=\"Women\">Women</option>\n            </select>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Category/Tags:</Form.Label>\n            <div className=\"mb-3\">\n              {checkboxes.map(checkbox => (\n                <Form.Check inline\n                  key={checkbox.id}\n                  label={checkbox.id}\n                  id={checkbox.id}\n                  type=\"checkbox\"\n                  checked={checkboxIds.includes(checkbox.id)}\n                  name={checkbox.id}\n                  onChange={this.checkboxOnChange}\n                />\n              ))}\n            </div>\n          </Form.Group>\n\n          <Form.Check\n            type=\"hidden\"\n            disabled\n          />\n\n          <ReCAPTCHA\n            id=\"ReCAPTCHA\"\n            sitekey=\"6LdaT90UAAAAAPhUh2D2odXQQB47ilnXw2mhCwAj\"\n            onChange={this.handleRecaptureComplete} // Successful completion of ReCAPTCHA\n            ref={(el) => {\n              this.registerRecaptcha = el;\n            }}\n          />\n\n          <Form.Group>\n            <Button id=\"addFormSubmit\" type=\"submit\" value=\"Submit\"\n              disabled={!this.state.isCaptchaVerified}\n              onClick={() => {\n                this.animateSubmit();\n                resetRecaptcha()\n              }}>\n              {animateSubmit && <Spinner as=\"span\" animation=\"grow\" size=\"sm\" role=\"status\" aria-hidden=\"true\" style={{ marginRight: \"4px\" }} />}\n              {animateSubmit && <span>Submitting</span>}\n              {!animateSubmit && <span>Submit</span>}\n            </Button>\n            {/* <Button className=\"btn\" variant=\"danger\" onClick={this.onDelete}>Delete</Button> */}\n            <Button className=\"btn\" variant=\"danger\" type=\"reset\"\n              onClick={() => {\n                resetRecaptcha()\n              }}>\n              Reset\n              </Button>\n          </Form.Group>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default AddForm;","import React, { Component } from 'react';\nimport Alert from 'react-bootstrap/Alert';\n\nclass DisplayAlerts extends Component {\n\nconstructor(props){\n    super(props);\n\n    this.onClickAlert = this.onClickAlert.bind(this);\n\n    this.state = {\n        setShowAlert: true\n    }\n  }\n\n    // Alerts onChange\n    onClickAlert(e) {\n    this.setState({\n        setShowAlert: false\n    });\n    }\n\n  render() {\n        return(\n            <div className=\"mainContainer\">\n            <Alert show={this.state.setShowAlert} variant=\"success\" onClick={this.onClickAlert} dismissible>\n                <Alert.Heading>Missing a Vendor?</Alert.Heading>\n                <p>Please feel free to contribute to the list by adding a \"Made in USA\" company. Your submission(s) will be put into a queue and approved by a moderator shortly. Thanks!</p>\n            </Alert>\n            </div>\n        );\n    }\n}\n\nexport default DisplayAlerts;","import React, { Component } from 'react';\nimport AddForm from './addForm';\nimport DisplayAlerts from './displayAlerts';\n\nclass Add extends Component {\n\nconstructor(props){\n    super(props);\n\n    this.state = {\n      selected: []\n    }\n  }\n\n  render() {\n\n    return(\n      <div>\n        <DisplayAlerts />\n        <AddForm selected={this.props.selected} />\n      </div>\n    );\n}\n}\n \nexport default Add;","import React from 'react';\nimport Alert from 'react-bootstrap/Alert';\nimport { NavLink } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faReact, faBootstrap, faGithub } from '@fortawesome/free-brands-svg-icons'\nimport { faCloud, faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons'\n\nconst About = () => {\n    return (\n        <div className=\"mainContainer\">\n            <Alert variant=\"primary\">\n                <Alert.Heading>About the List</Alert.Heading>\n                <p>\n                    Over a decade ago, I took a challenge to slowly convert my wardrobe to entirely \"Made in USA\" clothing. The goals were numerous — from having fewer items of higher-quality clothing that would last longer, to voting with my wallet in support of fair wages, supply chain transparency, and against adverse working conditions abroad. Unfortunately, not all companies listed have their entire product portfolio American-made — the only requirement is that some product(s) should be manufactured in the USA, regardless of domestic or foreign materials. Please feel free to <NavLink to={`${process.env.PUBLIC_URL}/add`}>add</NavLink> to the list!\n                 </p>\n                <hr />\n                <p className=\"mb-0\">\n                    This is a personal coding project built as a Single Page Application (SPA) using <a href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faReact} /> React</a>, <a href=\"https://react-bootstrap.github.io/\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faBootstrap} /> Bootstrap</a>, and  <a href=\"https://react-leaflet.js.org/\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faMapMarkerAlt} /> Leaflet</a> with a <a href=\"https://www.mongodb.com/cloud/atlas\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faCloud} /> Cloud MongoDB service</a>. Open source and proudly hosted on <a href=\"https://github.com/hdehal/made-in-usa\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faGithub} /> GitHub</a>.\n            </p>\n            </Alert>\n        </div>\n    );\n}\n\nexport default About;","import React from 'react';\n \nconst Error = () => {\n    return (\n        <div className=\"mainContainer\">\n            <p>404 Error: Page does not exist</p>\n        </div>\n    );\n}\n \nexport default Error;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button'\nimport Badge from 'react-bootstrap/Badge';\nimport CountUp from 'react-countup';\n\n// Modularized component imports\nimport { item } from './stitchAuth';\n\nclass DisplayCount extends Component {\n\n    // Initial state\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            totalItems: ''\n        }\n    }\n\n    // Count database documents\n    async getData() {\n        (await item())\n            .count({ \"isVerified\": true })\n            .then(totalItems => this.setState({ totalItems }))\n\n            // Error logging\n            .catch(err => {\n                console.warn(\"Error:\", err);\n            });\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    render() {\n\n        return (\n            <Link to=\"/\">\n                <Button size=\"sm\" variant=\"success\" >\n                    <Badge variant=\"light\">\n                        <CountUp start={0} end={this.state.totalItems} delay={1}>\n                            {({ countUpRef }) => (\n                                <div>\n                                    <span ref={countUpRef} />\n                                </div>\n                            )}\n                        </CountUp>\n                    </Badge> Companies\n            </Button>\n            </Link>\n        )\n    }\n}\n\nexport default DisplayCount;","import React, { memo } from 'react'\nimport twemoji from 'twemoji'\n\n// Using the official https://github.com/twitter/twemoji from Twitter\n// With an excellent example from https://gist.github.com/chibicode/fe195d792270910226c928b69a468206\n\nconst Twemoji = ({ emoji }) => (\n    <span\n        dangerouslySetInnerHTML={{\n            __html: twemoji.parse(emoji, {\n                folder: 'svg',\n                ext: '.svg'\n            })\n        }}\n    />\n)\n\nexport default memo(Twemoji)","import React from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport DisplayCount from './displayCount';\nimport Twemoji from './twemoji'\n\nconst Navigation = () => {\n    return (\n        <Navbar bg=\"light\" expand=\"lg\">\n            <Link to={'/'}><Navbar.Brand><Twemoji emoji=\"🇺🇸\" /> Made in USA List</Navbar.Brand></Link>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <NavLink to=\"/add\">Add Apparel Company</NavLink>\n                </Nav>\n            </Navbar.Collapse>\n            <Navbar.Collapse className=\"justify-content-end\">\n                <DisplayCount />\n                <NavLink to=\"/about\">\n                    <Button size=\"sm\" variant=\"secondary\">About</Button>\n                </NavLink>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n}\n\nexport default Navigation;","import React, { Component } from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory from 'react-bootstrap-table2-filter';\n\n// Modularized component imports\nimport { item } from './stitchAuth';\nimport { tableColumns } from './tableColumns';\n\nclass DisplayTable extends Component {\n\n    // Initial state\n    constructor(props){\n        super(props);\n\n        this.state = {\n          data: []\n        }\n      }\n  \n      // Find database documents\n      async getData() {  \n        (await item())\n        .find({\"isVerified\":true})\n          .toArray()\n          .then(data => \n            data.map(x=>{ return { ...x, id: x._id.toString()}; })\n          ).then(data => this.setState({data}))\n  \n          // Error logging\n          .catch(err => {\n            console.warn(\"Error:\", err);\n          });\n      }\n  \n      componentDidMount(){\n        this.getData();\n      }\n\n  render() {\n\n      // Define selectRow\n      /* const selectRow = {\n        mode: 'radio',\n        clickToSelect: true,\n        selectColumnPosition: 'right',\n        hideSelectAll: true,\n        onSelect: this.props.handleOnSelectProp\n      }; */\n\n      // Default sorting\n      const defaultSorted = [{\n        dataField: 'company',\n        order: 'asc'\n      }];\n\n    return(\n        <div>\n          <BootstrapTable\n            keyField=\"id\"\n            data={this.state.data}\n            columns={tableColumns}\n            // selectRow={ selectRow }\n            filter={ filterFactory() }\n            defaultSorted={ defaultSorted } \n            striped\n            hover\n            condensed\n            bootstrap4\n          />\n        </div>\n    )\n  }\n}\n\nexport default DisplayTable;","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronUp } from '@fortawesome/free-solid-svg-icons';\n\nclass ScrollTop extends React.Component {\n\n    // Initial state\n    constructor(props) {\n        super(props);\n\n        this.scrollFunc = this.scrollFunc.bind(this);\n\n        this.state = {\n            showScrollTop: false\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"scroll\", this.scrollFunc)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"scroll\", this.scrollFunc)\n    }\n\n    scrollFunc(e) {\n        var y = window.scrollY;\n        if (y >= 100) {\n            this.setState({\n                showScrollTop: true\n            });\n\n        } else {\n            this.setState({\n                showScrollTop: false\n            });\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                <Button\n                    className={this.state.showScrollTop === true ? 'scrollTop fadeIn' : 'scrollTop'}\n                    onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })}\n                    style={{ visibility: this.state.showScrollTop === true ? 'visible' : 'hidden' }}\n                    variant=\"success\">\n                    <FontAwesomeIcon icon={faChevronUp} />\n                </Button>\n            </div>\n        );\n    }\n}\n\nexport default ScrollTop;","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport ReactGA from 'react-ga';\n\n// Modularized component imports\nimport Home from './components/home';\nimport Add from './components/add';\nimport About from './components/about';\nimport Error from './components/error';\nimport Navigation from './components/navigation';\nimport DisplayTable from './components/displayTable';\nimport ScrollTop from './components/scrollTop';\n\nfunction initializeReactGA() {\n  ReactGA.initialize('UA-159568942-1');\n  ReactGA.pageview(window.location.pathname + window.location.search);\n}\n\ninitializeReactGA()\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      selected: []\n    }\n\n    this.handleOnSelect = this.handleOnSelect.bind(this)\n  }\n\n    // Delete functionality setState\n    handleOnSelect(row, isSelect){\n      // If row selected setState\n      if (isSelect) {\n          console.log(row)\n          this.setState({\n          selected: row.id\n          })\n      // Otherwise clear the state\n      } else {\n          console.log(row)\n          this.setState({\n          selected: []\n          })\n      }\n      }\n\n  render() {\n\n    return(\n\n      <BrowserRouter basename=\"/st\">\n\n        <Navigation />\n          <Switch>\n            <Route path=\"/\" component={Home} exact/>\n            <Route path=\"/add\" component={() => <Add selected={this.state.selected} />} />\n            <Route path=\"/about\" component={About}/>\n            <Route component={Error}/>\n          </Switch>\n\n          <DisplayTable handleOnSelectProp={this.handleOnSelect} />\n\n          <ScrollTop />\n\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n  <App />\n  </BrowserRouter>, document.getElementById('root'));"],"sourceRoot":""}