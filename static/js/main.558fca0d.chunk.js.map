{"version":3,"sources":["components/tableColumns.js","components/home.js","components/stitchAuth.js","components/addForm.js","components/displayAlerts.js","components/add.js","components/about.js","components/error.js","components/navigation.js","components/displayTable.js","App.js","index.js"],"names":["nameFilter","home","className","mongoClient","Stitch","hasAppClient","getAppClient","initializeDefaultAppClient","getServiceClient","RemoteMongoClient","factory","credential","UserApiKeyCredential","isAuthed","collection","itemModify","db","AddForm","props","checkboxOnChange","event","name","target","setState","prevState","checkboxIds","includes","filter","id","sort","animateSubmit","setTimeout","onChangeCompanyName","bind","onChangeUrl","onChangeLoc","onChangeGender","onSubmit","onDelete","onChangeisVerified","onloadCallback","verifyCallback","state","checkboxes","company","url","loc","gender","isCaptchaVerified","isVerified","e","this","value","checked","preventDefault","newItem","tags","insertOne","then","result","console","log","insertedId","catch","err","error","document","getElementById","selectedIndex","selected","query","ObjectId","deleteOne","deletedCount","response","recaptchaInstance","resetRecaptcha","reset","Form","Group","Label","Control","type","size","onChange","required","multiple","map","checkbox","Check","inline","key","label","disabled","sitekey","render","ref","Button","onClick","Spinner","as","animation","role","aria-hidden","style","marginRight","variant","Component","DisplayAlerts","onClickAlert","setShowAlert","Alert","show","dismissible","Heading","Add","About","to","process","href","rel","Error","Navigation","Navbar","bg","expand","Brand","aria-label","Toggle","aria-controls","Collapse","Nav","sortFunc","order","column","tableColumns","dataField","text","hidden","sortCaret","formatter","rowContent","row","headerStyle","colIndex","width","cell","x","Badge","pill","textFilter","placeholder","getFilter","onkeydown","evt","window","keyCode","DisplayTable","data","Promise","resolve","reject","defaultAppClient","auth","loginWithCredential","authedId","_id","toString","warn","find","toArray","getData","keyField","columns","filterFactory","defaultSorted","striped","hover","condensed","bootstrap4","ReactGA","initialize","pageview","location","pathname","search","App","handleOnSelect","isSelect","basename","path","component","Home","exact","handleOnSelectProp","ReactDOM"],"mappings":"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","file":"static/js/main.558fca0d.chunk.js","sourcesContent":["import React from 'react';\nimport { textFilter } from 'react-bootstrap-table2-filter';\nimport Badge from 'react-bootstrap/Badge';\n\n// Define sortCaret\nconst sortFunc = (order, column) => {\n    if (!order) return (<span className=\"order\"><span className=\"dropdown\"><span className=\"caret\"></span></span><span className=\"dropup\"><span className=\"caret\"></span></span></span>);\n    else if (order === 'asc') return (<span className=\"react-bootstrap-table-sort-order\"><span className=\"caret\"></span></span>);\n    else if (order === 'desc') return (<span className=\"react-bootstrap-table-sort-order dropup\"><span className=\"caret\"></span></span>);\n    return null;\n  }\n\n// JSON table column data\nlet nameFilter;\n\nexport const tableColumns = [\n{\n    dataField: 'id',\n    text: 'ID',\n    hidden: true\n    \n}, {\n    dataField: 'company',\n    text: 'Company',\n    sort: true,\n    sortCaret: sortFunc\n}, {\n    dataField: 'url',\n    text: 'URL',\n    sort: true,\n    sortCaret: sortFunc,\n    formatter: (rowContent, row) => { return <><a href={rowContent} target=\"_blank\" rel=\"noopener noreferrer\">{rowContent}</a></>; }\n    }, {\n    dataField: 'loc',\n    text: 'Location',\n    sort: true,\n    sortCaret: sortFunc,\n    headerStyle: (column, colIndex) => {\n        return { width: '175px' }; \n    }\n}, {\n    dataField: 'gender',\n    text: 'Gender',\n    sort: true,\n    sortCaret: sortFunc,\n    headerStyle: (column, colIndex) => {\n        return { width: '100px' };\n    }\n}, {\n    dataField: 'tags',\n    text: 'Tags',\n    sort: true,\n    sortCaret: sortFunc,\n    formatter: (cell) => {\n            return cell.map(x => {\n                return <><Badge pill variant=\"primary\">{x}</Badge></>;\n            });\n      },\n    filter: textFilter({\n        className: 'form-control-sm',\n        placeholder: 'Search by tag',\n        // onClick: e => console.log(e)\n        getFilter: (filter) => {\n          nameFilter = filter;\n        }\n      }),\n}];\n\n    document.onkeydown = function(evt) {\n        evt = evt || window.event;\n        var isEscape = false;\n        if (\"key\" in evt) {\n            isEscape = (evt.key === \"Escape\" || evt.key === \"Esc\");\n        } else {\n            isEscape = (evt.keyCode === 27);\n        }\n        if (isEscape) {\n            // console.log(\"Escape key pressed\")\n            nameFilter('');\n        }\n    };","import React from 'react';\n \nconst home = () => {\n    return (\n        <div className=\"mainContainer\">\n        </div>\n    );\n}\n \nexport default home;","import { Stitch, RemoteMongoClient, UserApiKeyCredential } from 'mongodb-stitch-browser-sdk';\n\n// Define MongoDB Stitch App ID\nexport const APP_ID = \"miusa-gxhmx\";\n\n// Initialize MongoDB Stitch\nexport const app = Stitch.hasAppClient(APP_ID)\n    ? Stitch.getAppClient(APP_ID)\n    : Stitch.initializeDefaultAppClient(APP_ID);\n    // OR for anonymous login use:\n    // Stitch.initializeAppClient(APP_ID); \n\n// Define client/factory\nexport const mongoClient = app.getServiceClient(\n    RemoteMongoClient.factory,\n    \"mongodb-atlas\"\n  );\n\n// API authentication\n// https://stitch.mongodb.com > (your app) > Users > Providers > API Key (On) && Users > Add\n// This API key has DB read-write access only, DB delete functionality is disabled, all entries will be queued to be approved by the admin\nconst credential = new UserApiKeyCredential('V6LG4GfuM1tHrCA9XCHprjF2TqBzcEgZbXdr6TRPwwz3NYLzlR5Y6sGZ55vIyDmf')\n\n// Define db and collection -- READ\nvar isAuthed = false;\nvar collection = null;\nexport const item = () => { \n  return new Promise((resolve, reject) => { \n    if(isAuthed) { resolve(collection); } \n    else { \n      Stitch.defaultAppClient.auth.loginWithCredential(credential)\n      .then(authedId => { isAuthed = true; collection = mongoClient.db(\"vendor\").collection(\"vendor-item\"); resolve(collection); })\n      .catch(err => reject(err));\n    }\n  });\n};\n\n// Define db and collection -- WRITE and DELETE\nexport const itemModify = mongoClient.db(\"vendor\").collection(\"vendor-item\");\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner'\nimport { ObjectId } from 'bson';\nimport Recaptcha from 'react-recaptcha';\n\n// Modularized component imports\nimport { itemModify } from './stitchAuth';\n\nclass AddForm extends Component {\n\n  // Initial state\n  constructor(props){\n    super(props);\n\n    this.onChangeCompanyName = this.onChangeCompanyName.bind(this);\n    this.onChangeUrl = this.onChangeUrl.bind(this);\n    this.onChangeLoc = this.onChangeLoc.bind(this);\n    this.onChangeGender = this.onChangeGender.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n    this.onChangeisVerified = this.onChangeisVerified.bind(this);\n\n    this.onloadCallback = this.onloadCallback.bind(this);\n    this.verifyCallback = this.verifyCallback.bind(this);\n\n    this.state = {\n      // States for checkboxes\n      checkboxes: [{ id: \"Accessories\" }, { id: \"Bottoms\" }, { id: \"Dresses\" }, { id: \"Formal\" }, { id: \"Shoes\" }, { id: \"Swim\" }, { id: \"Tops\" }, { id: \"Undergarments\" }],\n      checkboxIds: [],\n      // States below to prevent input elements from switching from uncontrolled to controlled \n      company: '',\n      url: '',\n      loc: '',\n      gender: '',\n      isCaptchaVerified: false,\n      isVerified: false,\n      animateSubmit: false\n    }\n  }\n\n  // Form fields onChange\n    onChangeCompanyName(e) {\n    this.setState({\n        company: e.target.value\n    });\n    }\n    onChangeUrl(e) {\n    this.setState({\n        url: e.target.value\n    });\n    }\n    onChangeLoc(e) {\n      this.setState({\n        loc: e.target.value\n    });\n    }\n    onChangeGender(e) {\n      this.setState({\n        gender: e.target.value\n    });\n    }\n    onChangeisVerified(e) {\n      this.setState({\n        isVerified: e.target.checked\n    });\n    }\n\n    // Checkboxes onChange\n    checkboxOnChange = event => {\n      const { name } = event.target;\n      this.setState(prevState => {\n        const { checkboxIds } = prevState;\n        if (checkboxIds.includes(name)) {\n          return { checkboxIds: checkboxIds.filter(id => id !== name) };\n        } else {\n          return { checkboxIds: [...checkboxIds, name].sort() };\n        }\n      });\n    };\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        var newItem = { company: this.state.company, url: this.state.url, loc: this.state.loc, gender: this.state.gender, tags: this.state.checkboxIds, isVerified: this.state.isVerified }\n        // console.log(`The values are ${this.state.company}, ${this.state.url}, ${this.state.loc}, ${this.state.gender}, ${this.state.checkboxIds}, ${this.state.isVerified}`)\n\n        // Insert new item\n        itemModify.insertOne(newItem)\n        .then(result => console.log(`Successfully inserted item with _id: ${result.insertedId}`))\n        .catch(err => console.error(`Failed to insert item: ${err}`))\n\n        // Reset and clear the forms\n        this.setState({\n          id: '',\n          company: '',\n          url: '',\n          loc: '',\n          gender: '',\n          checkboxIds: [],\n          isCaptchaVerified: false,\n          isVerified: false\n        })\n\n        // Reset the select option to the default null value or index\n        document.getElementById(\"genderSelect\").selectedIndex = \"0\";\n\n        // getData after insertOne new item\n        // this.getData();\n        }\n\n        // Delete items in MongoDB Atlas\n        onDelete(e) {\n          console.log(this.props.selected)\n          const query = {\"_id\": new ObjectId(this.props.selected)};\n\n          itemModify.deleteOne(query)\n            .then(result => console.log(`Deleted ${result.deletedCount} item(s).`))\n            .catch(err => console.error(`Delete failed with error: ${err}`))\n            // getData after deleting item\n            // this.getData();\n          }\n\n          onloadCallback() {\n            // console.log(\"Captcha loaded!\");\n          }\n\n          // Recaptcha verification response\n          verifyCallback(response) {\n            if(response) {\n              this.setState({\n                isCaptchaVerified: true\n              })\n            }\n          }\n\n          // Animate submit button onClick\n          animateSubmit = () => {\n            this.setState({ \n                animateSubmit: true \n            });\n            setTimeout(()=>{\n              this.setState({animateSubmit: false});\n            }, 2000)\n          }\n\n  render() {\n\n    // Define checkboxes state\n    const { checkboxes, checkboxIds } = this.state;\n\n    // Define animateSubmit state\n    const { animateSubmit } = this.state;\n\n    // Recaptcha reset function\n    let recaptchaInstance;\n    const resetRecaptcha = () => {\n      recaptchaInstance.reset();\n      this.setState({\n        isCaptchaVerified: false\n      })\n    };\n\n    return(\n        <div className=\"mainContainer\">\n            <h4>Add New Company</h4>\n            <form onSubmit={this.onSubmit}>\n                <Form.Group>\n                    <Form.Label>Company Name:</Form.Label>\n                    <Form.Control \n                        type=\"text\"\n                        size=\"sm\"\n                        value={this.state.company}\n                        onChange={this.onChangeCompanyName}\n                        required\n                    />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>URL:</Form.Label>\n                    <Form.Control \n                        type=\"text\"\n                        size=\"sm\"\n                        value={this.state.url}\n                        onChange={this.onChangeUrl}\n                        required\n                    />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Location:</Form.Label>\n                    <Form.Control \n                        type=\"text\"\n                        size=\"sm\"\n                        value={this.state.loc}\n                        onChange={this.onChangeLoc}\n                        required\n                    />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Gender:</Form.Label>\n                    <select\n                      required\n                      id=\"genderSelect\"\n                      className=\"form-control dropdown-toggle btn btn-secondary\"\n                      onChange={this.onChangeGender}\n                      multiple={false}\n                      >\n                      <option value=\"\">Select One</option>\n                      <option value=\"Everyone\">Everyone</option>\n                      <option value=\"Male\">Male</option>\n                      <option value=\"Female\">Female</option>\n                    </select>\n                </Form.Group>\n\n                <Form.Group>\n                  <Form.Label>\n                    Category/Tags:\n                  </Form.Label>\n                  <div className=\"mb-3\">\n                    {checkboxes.map(checkbox => (\n                      <Form.Check inline\n                        key={checkbox.id}\n                        label={checkbox.id}\n                        id={checkbox.id}\n                        type=\"checkbox\"\n                        checked={checkboxIds.includes(checkbox.id)}\n                        name={checkbox.id}\n                        onChange={this.checkboxOnChange}\n                      />\n                    ))}\n                  </div>\n                </Form.Group>\n\n                <Form.Check\n                    type=\"hidden\"\n                    disabled\n                  />\n\n                <Recaptcha\n                  sitekey=\"6LdaT90UAAAAAPhUh2D2odXQQB47ilnXw2mhCwAj\"\n                  render=\"explicit\"\n                  onloadCallback={this.onloadCallback}\n                  verifyCallback={this.verifyCallback}\n                  ref={e => recaptchaInstance = e}\n                />\n\n                <Form.Group>\n\n                    <Button id=\"addFormSubmit\" type=\"submit\" value=\"Submit\" disabled={!this.state.isCaptchaVerified} \n                    onClick={() => {\n                      this.animateSubmit();\n                      resetRecaptcha()\n                   }}>\n                     { animateSubmit && <Spinner as=\"span\" animation=\"grow\" size=\"sm\" role=\"status\" aria-hidden=\"true\" style={{ marginRight: \"4px\" }} /> }\n                     { animateSubmit && <span>Submitting</span> }\n                     { !animateSubmit && <span>Submit</span> }\n                     </Button>\n                    {/* <Button className=\"btn\" variant=\"danger\" onClick={this.onDelete}>Delete</Button> */}\n                    <Button className=\"btn\" variant=\"danger\" type=\"reset\"\n                    onClick={() => {\n                      resetRecaptcha()\n                   }}>Reset</Button>\n                </Form.Group>\n\n            </form>\n        </div>\n    )\n  }\n}\n\n\n  \nexport default AddForm;","import React, { Component } from 'react';\nimport Alert from 'react-bootstrap/Alert';\n\nclass DisplayAlerts extends Component {\n\nconstructor(props){\n    super(props);\n\n    this.onClickAlert = this.onClickAlert.bind(this);\n\n    this.state = {\n        setShowAlert: true\n    }\n  }\n\n    // Alerts onChange\n    onClickAlert(e) {\n    this.setState({\n        setShowAlert: false\n    });\n    }\n\n  render() {\n        return(\n            <div className=\"mainContainer\">\n            <Alert show={this.state.setShowAlert} variant=\"success\" onClick={this.onClickAlert} dismissible>\n                <Alert.Heading>Missing a Vendor?</Alert.Heading>\n                <p>Please feel free to contribute to the list by adding a \"Made in USA\" company. Your submission(s) will be put into a queue and approved by a moderator shortly. Thanks!</p>\n            </Alert>\n            </div>\n        );\n    }\n}\n\nexport default DisplayAlerts;","import React, { Component } from 'react';\nimport AddForm from './addForm';\nimport DisplayAlerts from './displayAlerts';\n\nclass Add extends Component {\n\nconstructor(props){\n    super(props);\n\n    this.state = {\n      selected: []\n    }\n  }\n\n  render() {\n\n    return(\n      <div>\n        <DisplayAlerts />\n        <AddForm selected={this.props.selected} />\n      </div>\n    );\n}\n}\n \nexport default Add;","import React from 'react';\nimport Alert from 'react-bootstrap/Alert';\nimport { NavLink } from 'react-router-dom';\n\nconst About = () => {\n    return (\n        <div className=\"mainContainer\">\n            <Alert variant=\"primary\">\n            <Alert.Heading>About the List</Alert.Heading>\n            <p>\n                Over ten years ago, I took a challenge to slowly convert my wardrobe to entirely \"Made in USA\" clothing. The goals were numerous — from having fewer items of higher-quality clothing that would last longer, to voting with my wallet and making a political statement for fair wages, supply chain transparency, and against adverse working conditions abroad. Not all companies listed have their entire product portfolio American-made —  the only requirement is that some product(s) should be manufactured in the USA — regardless of domestic or foreign materials. Please feel free to <NavLink to={`${process.env.PUBLIC_URL}/add`}>contribute</NavLink>!  \n            </p>\n            <hr />\n            <p className=\"mb-0\">\n                This is a personal coding project built as a Single Page Application (SPA) using <a href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">React</a> and <a href=\"https://react-bootstrap.github.io/\" target=\"_blank\" rel=\"noopener noreferrer\">Bootstrap</a> with a <a href=\"https://www.mongodb.com/cloud/atlas\" target=\"_blank\" rel=\"noopener noreferrer\">cloud MongoDB service</a>. Open source and proudly hosted on <a href=\"https://github.com/hdehal/made-in-usa\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a>.\n            </p>\n            </Alert>\n        </div>\n    );\n}\n\nexport default About;","import React from 'react';\n \nconst Error = () => {\n    return (\n        <div className=\"mainContainer\">\n            <p>404 Error: Page does not exist</p>\n        </div>\n    );\n}\n \nexport default Error;","import React from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\n\nconst Navigation = () => {\n    return (\n        <Navbar bg=\"light\" expand=\"lg\">\n        <Link to={'/'}><Navbar.Brand><span role=\"img\" aria-label=\"US flag\">🇺🇸</span> Made in USA List</Navbar.Brand></Link>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    {/* <NavLink to=\"/\">Home</NavLink> */}\n                    <NavLink to=\"/add\">Add Company</NavLink>\n                </Nav>\n            </Navbar.Collapse>\n            <Navbar.Collapse className=\"justify-content-end\">\n                <NavLink to=\"/about\">\n                    <Button size=\"sm\" variant=\"secondary\">About</Button>\n                </NavLink>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n    }\n\nexport default Navigation;","import React, { Component } from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory from 'react-bootstrap-table2-filter';\n\n// Modularized component imports\nimport { item } from './stitchAuth';\nimport { tableColumns } from './tableColumns';\n\nclass DisplayTable extends Component {\n\n    // Initial state\n    constructor(props){\n        super(props);\n\n        this.state = {\n          data: []\n        }\n      }\n  \n      // Find database documents\n      async getData() {  \n        (await item())\n        .find({\"isVerified\":true})\n          .toArray()\n          .then(data => \n            data.map(x=>{ return { ...x, id: x._id.toString()}; })\n          ).then(data => this.setState({data}))\n  \n          // Error logging\n          .catch(err => {\n            console.warn(\"Error:\", err);\n          });\n      }\n  \n      componentDidMount(){\n        this.getData();\n      }\n\n  render() {\n\n      // Define selectRow\n      /* const selectRow = {\n        mode: 'radio',\n        clickToSelect: true,\n        selectColumnPosition: 'right',\n        hideSelectAll: true,\n        onSelect: this.props.handleOnSelectProp\n      }; */\n\n      // Default sorting\n      const defaultSorted = [{\n        dataField: 'company',\n        order: 'asc'\n      }];\n\n    return(\n        <div>\n          <BootstrapTable\n            keyField=\"id\"\n            data={this.state.data}\n            columns={tableColumns}\n            // selectRow={ selectRow }\n            filter={ filterFactory() }\n            defaultSorted={ defaultSorted } \n            striped\n            hover\n            condensed\n            bootstrap4\n          />\n        </div>\n    )\n  }\n}\n\nexport default DisplayTable;","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport ReactGA from 'react-ga';\n\n// Modularized component imports\nimport Home from './components/home';\nimport Add from './components/add';\nimport About from './components/about';\nimport Error from './components/error';\nimport Navigation from './components/navigation';\nimport DisplayTable from './components/displayTable';\n\nfunction initializeReactGA() {\n  ReactGA.initialize('UA-159568942-1');\n  ReactGA.pageview(window.location.pathname + window.location.search);\n}\n\ninitializeReactGA()\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      selected: []\n    }\n\n    this.handleOnSelect = this.handleOnSelect.bind(this)\n  }\n\n    // Delete functionality setState\n    handleOnSelect(row, isSelect){\n      // If row selected setState\n      if (isSelect) {\n          console.log(row)\n          this.setState({\n          selected: row.id\n          })\n      // Otherwise clear the state\n      } else {\n          console.log(row)\n          this.setState({\n          selected: []\n          })\n      }\n      }\n\n  render() {\n\n    return(\n\n      <BrowserRouter basename=\"/st\">\n\n        <Navigation />\n          <Switch>\n            <Route path=\"/\" component={Home} exact/>\n            <Route path=\"/add\" component={() => <Add selected={this.state.selected} />} />\n            <Route path=\"/about\" component={About}/>\n            <Route component={Error}/>\n          </Switch>\n\n          <DisplayTable handleOnSelectProp={this.handleOnSelect} />\n\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n  <App />\n  </BrowserRouter>, document.getElementById('root'));"],"sourceRoot":""}