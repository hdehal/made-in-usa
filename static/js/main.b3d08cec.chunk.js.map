{"version":3,"sources":["components/stitchAuth.js","components/maps.js","components/tableColumns.js","components/home.js","components/addForm.js","components/displayAlerts.js","components/add.js","components/about.js","components/error.js","components/navigation.js","components/displayTable.js","App.js","index.js"],"names":["mongoClient","Stitch","hasAppClient","getAppClient","initializeDefaultAppClient","getServiceClient","RemoteMongoClient","factory","credential","UserApiKeyCredential","process","isAuthed","collection","item","Promise","resolve","reject","defaultAppClient","auth","loginWithCredential","then","authedId","db","catch","err","itemModify","require","nameFilter","Maps","props","state","dataMaps","setState","console","warn","find","toArray","this","getData","showItems","window","innerWidth","Map","style","height","width","opacity","zoom","maxZoom","center","attributionControl","TileLayer","url","attribution","AttributionControl","position","prefix","spiderfyDistanceMultiplier","showCoverageOnHover","maxClusterRadius","map","dataItem","k","coordinates","company","loc","CircleMarker","onClick","open","key","Tooltip","direction","offset","href","Component","home","provider","OpenStreetMapProvider","AddForm","checkboxOnChange","event","name","target","prevState","checkboxIds","includes","filter","id","sort","animateSubmit","onChangeCompanyName","bind","onChangeUrl","onChangeLoc","onChangeGender","onSubmit","onDelete","onChangeisVerified","onloadCallback","verifyCallback","checkboxes","gender","isCaptchaVerified","isVerified","e","value","checked","preventDefault","a","search","query","result","length","locYX","y","x","newItem","tags","insertOne","log","insertedId","error","document","getElementById","selectedIndex","selected","ObjectId","deleteOne","deletedCount","response","recaptchaInstance","resetRecaptcha","reset","className","Form","Group","Label","Control","type","size","onChange","placeholder","required","multiple","checkbox","Check","inline","label","disabled","sitekey","render","ref","Button","Spinner","as","animation","role","aria-hidden","marginRight","variant","DisplayAlerts","onClickAlert","setShowAlert","Alert","show","dismissible","Heading","Add","About","to","rel","Error","Navigation","Navbar","bg","expand","Brand","aria-label","Toggle","aria-controls","Collapse","Nav","sortFunc","order","column","tableColumns","dataField","text","hidden","sortCaret","headerStyle","colIndex","minWidth","formatter","rowContent","row","cell","Badge","pill","textFilter","getFilter","onkeydown","evt","keyCode","DisplayTable","data","_id","toString","keyField","columns","filterFactory","defaultSorted","striped","hover","condensed","bootstrap4","ReactGA","initialize","pageview","location","pathname","App","handleOnSelect","isSelect","basename","path","component","Home","exact","handleOnSelectProp","ReactDOM"],"mappings":"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","file":"static/js/main.b3d08cec.chunk.js","sourcesContent":["import { Stitch, RemoteMongoClient, UserApiKeyCredential } from 'mongodb-stitch-browser-sdk';\n\n// Define MongoDB Stitch App ID\nexport const APP_ID = \"miusa-gxhmx\";\n\n// Initialize MongoDB Stitch\nexport const app = Stitch.hasAppClient(APP_ID)\n    ? Stitch.getAppClient(APP_ID)\n    : Stitch.initializeDefaultAppClient(APP_ID);\n    // OR for anonymous login use:\n    // Stitch.initializeAppClient(APP_ID); \n\n// Define client/factory\nexport const mongoClient = app.getServiceClient(\n    RemoteMongoClient.factory,\n    \"mongodb-atlas\"\n  );\n\n// API authentication\n// https://stitch.mongodb.com > (your app) > Users > Providers > API Key (On) && Users > Add\n// This API key has DB read-write access only, DB delete functionality is disabled, all entries will be queued to be approved by the admin\nconst credential = new UserApiKeyCredential(process.env.REACT_APP_STITCH_API_KEY)\n\n// Define db and collection -- READ\nvar isAuthed = false;\nvar collection = null;\nexport const item = () => { \n  return new Promise((resolve, reject) => { \n    if(isAuthed) { resolve(collection); } \n    else { \n      Stitch.defaultAppClient.auth.loginWithCredential(credential)\n      .then(authedId => { isAuthed = true; collection = mongoClient.db(\"vendor\").collection(\"vendor-item\"); resolve(collection); })\n      .catch(err => reject(err));\n    }\n  });\n};\n\n// Define db and collection -- WRITE and DELETE\nexport const itemModify = mongoClient.db(\"vendor\").collection(\"vendor-item\");\n","import React, { Component } from 'react';\nimport { item } from './stitchAuth';\nimport { Map, CircleMarker, TileLayer, Tooltip, AttributionControl } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nrequire('react-leaflet-markercluster/dist/styles.min.css');\n\n/* Adapted from https://github.com/afzalsayed96/bubbles-map by Afzal Sayed  */\n/* Map tiles proudly from Stamen Design in San Francisco https://stamen.com/maps/ */\n/* Additional help from http://leaflet-extras.github.io/leaflet-providers/preview/ */\n/* Cluster functionality from https://www.npmjs.com/package/react-leaflet-markercluster */\n\nclass Maps extends Component {\n\n  // Initial state\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dataMaps: []\n    }\n  }\n\n  // Find database documents\n  async getData() {\n    (await item())\n      .find({ \"isVerified\": true })\n      .toArray()\n      .then(dataMaps => this.setState({ dataMaps }))\n\n      // Error logging\n      .catch(err => {\n        console.warn(\"Error:\", err);\n      });\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n\n    // Render map maxZoom based on mobile breakpoint\n    const isMobile = window.innerWidth < 480;\n    const showItems = isMobile ? 3 : 20;\n\n    return (\n      <div>\n        <Map\n          style={{ height: \"480px\", width: \"100%\", opacity: \"0.9\" }}\n          zoom={4.25}\n          maxZoom={showItems}\n          center={[37.7687477, -99.6820275]}\n          attributionControl={false}>\n          <TileLayer url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-lite/{z}/{x}/{y}{r}.png\"\n            attribution=\"Map by <a href='http://stamen.com' target='_blank'>Stamen Design</a> | &copy; <a href='https://www.openstreetmap.org/copyright' target='_blank'>OpenStreetMap</a> contributors\"\n          />\n\n          <AttributionControl position=\"bottomright\" prefix={false} />\n\n          <MarkerClusterGroup\n            spiderfyDistanceMultiplier={1}\n            showCoverageOnHover={false}\n            maxClusterRadius={35}\n          >\n            {this.state.dataMaps.map((dataItem, k) => {\n              let { coordinates, company, url, loc } = dataItem;\n              return (\n                <CircleMarker onClick={() => { window.open(url) }}\n                  key={k}\n                  center={[coordinates[0], coordinates[1]]}\n                  position={[coordinates[0], coordinates[1]]}\n                >\n                  <Tooltip direction=\"right\" offset={[-8, -2]} opacity={1}>\n                    <span><a href={url}>{company}</a></span>\n                    <span>{loc}</span>\n                  </Tooltip>\n                </CircleMarker>);\n            })}\n          </MarkerClusterGroup>\n\n        </Map>\n      </div>\n    );\n  }\n}\n\nexport default Maps;","import React from 'react';\nimport { textFilter } from 'react-bootstrap-table2-filter';\nimport Badge from 'react-bootstrap/Badge';\n\n// Define sortCaret\nconst sortFunc = (order, column) => {\n    if (!order) return (<span className=\"order\"><span className=\"dropdown\"><span className=\"caret\"></span></span><span className=\"dropup\"><span className=\"caret\"></span></span></span>);\n    else if (order === 'asc') return (<span className=\"react-bootstrap-table-sort-order\"><span className=\"caret\"></span></span>);\n    else if (order === 'desc') return (<span className=\"react-bootstrap-table-sort-order dropup\"><span className=\"caret\"></span></span>);\n    return null;\n  }\n\n// JSON table column data\nlet nameFilter;\n\nexport const tableColumns = [\n{\n    dataField: 'id',\n    text: 'ID',\n    hidden: true\n    \n}, {\n    dataField: 'company',\n    text: 'Company',\n    sort: true,\n    sortCaret: sortFunc,\n    headerStyle: (column, colIndex) => {\n        return { minWidth: '175px' }; \n    }\n}, {\n    dataField: 'url',\n    text: 'URL',\n    sort: true,\n    sortCaret: sortFunc,\n    formatter: (rowContent, row) => { return <><a href={rowContent} target=\"_blank\" rel=\"noopener noreferrer\">{rowContent}</a></>; }\n    }, {\n    dataField: 'loc',\n    text: 'Location',\n    sort: true,\n    sortCaret: sortFunc,\n    headerStyle: (column, colIndex) => {\n        return { minWidth: '175px' }; \n    }\n}, {\n    dataField: 'gender',\n    text: 'Gender',\n    sort: true,\n    sortCaret: sortFunc,\n    headerStyle: (column, colIndex) => {\n        return { minWidth: '120px' };\n    }\n}, {\n    dataField: 'tags',\n    text: <span className='tagsLabel'>Tags</span>,\n    sort: true,\n    sortCaret: sortFunc,\n    formatter: (cell) => {\n            return cell.map(x => {\n                return <><Badge pill variant=\"primary\">{x}</Badge></>;\n            });\n      },\n    filter: textFilter({\n        className: 'form-control-sm',\n        placeholder: 'Search by tag',\n        // onClick: e => console.log(e)\n        getFilter: (filter) => {\n          nameFilter = filter;\n        }\n      }),\n}];\n\n    document.onkeydown = function(evt) {\n        evt = evt || window.event;\n        var isEscape = false;\n        if (\"key\" in evt) {\n            isEscape = (evt.key === \"Escape\" || evt.key === \"Esc\");\n        } else {\n            isEscape = (evt.keyCode === 27);\n        }\n        if (isEscape) {\n            // console.log(\"Escape key pressed\")\n            nameFilter('');\n        }\n    };","import React from 'react';\nimport Maps from './maps';\n\nconst home = () => {\n    return (\n        <Maps />\n    );\n}\n\nexport default home;","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner'\nimport { ObjectId } from 'bson';\nimport Recaptcha from 'react-recaptcha';\nimport \"leaflet/dist/leaflet.css\";\nimport { OpenStreetMapProvider } from 'leaflet-geosearch';\n\n// Modularized component imports\nimport { itemModify } from './stitchAuth';\n\n// Provider for leaflet-geosearch plugin\nconst provider = new OpenStreetMapProvider();\n\nclass AddForm extends Component {\n\n  // Initial state\n  constructor(props) {\n    super(props);\n\n    this.onChangeCompanyName = this.onChangeCompanyName.bind(this);\n    this.onChangeUrl = this.onChangeUrl.bind(this);\n    this.onChangeLoc = this.onChangeLoc.bind(this);\n    this.onChangeGender = this.onChangeGender.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n    this.onChangeisVerified = this.onChangeisVerified.bind(this);\n\n    this.onloadCallback = this.onloadCallback.bind(this);\n    this.verifyCallback = this.verifyCallback.bind(this);\n\n    this.state = {\n      // States for checkboxes\n      checkboxes: [{ id: \"Accessories\" }, { id: \"Bottoms\" }, { id: \"Dresses\" }, { id: \"Formal\" }, { id: \"Shoes\" }, { id: \"Swim\" }, { id: \"Tops\" }, { id: \"Undergarments\" }],\n      checkboxIds: [],\n      // States below to prevent input elements from switching from uncontrolled to controlled \n      company: '',\n      url: '',\n      loc: '',\n      gender: '',\n      isCaptchaVerified: false,\n      isVerified: false,\n      animateSubmit: false\n    }\n  }\n\n  // Form fields onChange\n  onChangeCompanyName(e) {\n    this.setState({\n      company: e.target.value\n    });\n  }\n  onChangeUrl(e) {\n    this.setState({\n      url: e.target.value\n    });\n  }\n  onChangeLoc(e) {\n    this.setState({\n      loc: e.target.value\n    });\n  }\n  onChangeGender(e) {\n    this.setState({\n      gender: e.target.value\n    });\n  }\n  onChangeisVerified(e) {\n    this.setState({\n      isVerified: e.target.checked\n    });\n  }\n\n  // Checkboxes onChange\n  checkboxOnChange = event => {\n    const { name } = event.target;\n    this.setState(prevState => {\n      const { checkboxIds } = prevState;\n      if (checkboxIds.includes(name)) {\n        return { checkboxIds: checkboxIds.filter(id => id !== name) };\n      } else {\n        return { checkboxIds: [...checkboxIds, name].sort() };\n      }\n    });\n  };\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    // Convert \"City, State\" or \"ZIP\" to lat/long coordinates using leaflet-geosearch plugin \n    (async () => {\n      let result = await provider.search({ query: this.state.loc });\n      if (result && result.length > 0) {\n        const locYX = [result[0].y, result[0].x];\n        // Define array to inserted into the database\n        var newItem = { company: this.state.company, url: this.state.url, loc: this.state.loc, coordinates: locYX, gender: this.state.gender, tags: this.state.checkboxIds, isVerified: this.state.isVerified }\n      }\n\n      // Insert new item\n      itemModify.insertOne(newItem)\n        .then(result => console.log(`Successfully inserted item with _id: ${result.insertedId}`))\n        .catch(err => console.error(`Failed to insert item: ${err}`))\n\n      // Stop submit button animation when done inserting\n      this.setState({ animateSubmit: false })\n\n      // Reset and clear the forms\n      this.setState({\n        id: '',\n        company: '',\n        url: '',\n        loc: '',\n        gender: '',\n        checkboxIds: [],\n        isCaptchaVerified: false,\n        isVerified: false\n      })\n\n      // Reset the select option to the default null value or index\n      document.getElementById(\"genderSelect\").selectedIndex = \"0\";\n\n    })();\n  }\n\n  // Delete items in MongoDB Atlas\n  onDelete(e) {\n    console.log(this.props.selected)\n    const query = { \"_id\": new ObjectId(this.props.selected) };\n\n    itemModify.deleteOne(query)\n      .then(result => console.log(`Deleted ${result.deletedCount} item(s).`))\n      .catch(err => console.error(`Delete failed with error: ${err}`))\n    // getData after deleting item\n    // this.getData();\n  }\n\n  onloadCallback() {\n    // console.log(\"Captcha loaded!\");\n  }\n\n  // Recaptcha verification response\n  verifyCallback(response) {\n    if (response) {\n      this.setState({\n        isCaptchaVerified: true\n      })\n    }\n  }\n\n  // Animate submit button onClick\n  animateSubmit = () => {\n    this.setState({\n      animateSubmit: true\n    });\n  }\n\n  render() {\n\n    // Define checkboxes state\n    const { checkboxes, checkboxIds } = this.state;\n\n    // Define animateSubmit state\n    const { animateSubmit } = this.state;\n\n    // Recaptcha reset function\n    let recaptchaInstance;\n    const resetRecaptcha = () => {\n      recaptchaInstance.reset();\n      this.setState({\n        isCaptchaVerified: false\n      })\n    };\n\n    return (\n      <div className=\"mainContainer\">\n        <h4>Add New Company</h4>\n        <form onSubmit={this.onSubmit}>\n          <Form.Group>\n            <Form.Label>Company Name:</Form.Label>\n            <Form.Control\n              type=\"text\"\n              size=\"sm\"\n              value={this.state.company}\n              onChange={this.onChangeCompanyName}\n              placeholder=\"Example Corp\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>URL:</Form.Label>\n            <Form.Control\n              type=\"text\"\n              size=\"sm\"\n              value={this.state.url}\n              onChange={this.onChangeUrl}\n              placeholder=\"https://www.example.com\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Location:</Form.Label>\n            <Form.Control\n              type=\"text\"\n              size=\"sm\"\n              value={this.state.loc}\n              onChange={this.onChangeLoc}\n              placeholder=\"City, State\"\n              required\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Gender:</Form.Label>\n            <select\n              required\n              id=\"genderSelect\"\n              className=\"form-control dropdown-toggle btn btn-secondary\"\n              onChange={this.onChangeGender}\n              multiple={false}\n            >\n              <option value=\"\">Select One</option>\n              <option value=\"Everyone\">Everyone</option>\n              <option value=\"Men\">Men</option>\n              <option value=\"Women\">Women</option>\n            </select>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>\n              Category/Tags:\n                  </Form.Label>\n            <div className=\"mb-3\">\n              {checkboxes.map(checkbox => (\n                <Form.Check inline\n                  key={checkbox.id}\n                  label={checkbox.id}\n                  id={checkbox.id}\n                  type=\"checkbox\"\n                  checked={checkboxIds.includes(checkbox.id)}\n                  name={checkbox.id}\n                  onChange={this.checkboxOnChange}\n                />\n              ))}\n            </div>\n          </Form.Group>\n\n          <Form.Check\n            type=\"hidden\"\n            disabled\n          />\n\n          <Recaptcha\n            sitekey=\"6LdaT90UAAAAAPhUh2D2odXQQB47ilnXw2mhCwAj\"\n            render=\"explicit\"\n            onloadCallback={this.onloadCallback}\n            verifyCallback={this.verifyCallback}\n            ref={e => recaptchaInstance = e}\n          />\n\n          <Form.Group>\n\n            <Button id=\"addFormSubmit\" type=\"submit\" value=\"Submit\" disabled={!this.state.isCaptchaVerified}\n              onClick={() => {\n                this.animateSubmit();\n                resetRecaptcha()\n              }}>\n              {animateSubmit && <Spinner as=\"span\" animation=\"grow\" size=\"sm\" role=\"status\" aria-hidden=\"true\" style={{ marginRight: \"4px\" }} />}\n              {animateSubmit && <span>Submitting</span>}\n              {!animateSubmit && <span>Submit</span>}\n            </Button>\n            {/* <Button className=\"btn\" variant=\"danger\" onClick={this.onDelete}>Delete</Button> */}\n            <Button className=\"btn\" variant=\"danger\" type=\"reset\"\n              onClick={() => {\n                resetRecaptcha()\n              }}>\n              Reset\n              </Button>\n          </Form.Group>\n\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default AddForm;","import React, { Component } from 'react';\nimport Alert from 'react-bootstrap/Alert';\n\nclass DisplayAlerts extends Component {\n\nconstructor(props){\n    super(props);\n\n    this.onClickAlert = this.onClickAlert.bind(this);\n\n    this.state = {\n        setShowAlert: true\n    }\n  }\n\n    // Alerts onChange\n    onClickAlert(e) {\n    this.setState({\n        setShowAlert: false\n    });\n    }\n\n  render() {\n        return(\n            <div className=\"mainContainer\">\n            <Alert show={this.state.setShowAlert} variant=\"success\" onClick={this.onClickAlert} dismissible>\n                <Alert.Heading>Missing a Vendor?</Alert.Heading>\n                <p>Please feel free to contribute to the list by adding a \"Made in USA\" company. Your submission(s) will be put into a queue and approved by a moderator shortly. Thanks!</p>\n            </Alert>\n            </div>\n        );\n    }\n}\n\nexport default DisplayAlerts;","import React, { Component } from 'react';\nimport AddForm from './addForm';\nimport DisplayAlerts from './displayAlerts';\n\nclass Add extends Component {\n\nconstructor(props){\n    super(props);\n\n    this.state = {\n      selected: []\n    }\n  }\n\n  render() {\n\n    return(\n      <div>\n        <DisplayAlerts />\n        <AddForm selected={this.props.selected} />\n      </div>\n    );\n}\n}\n \nexport default Add;","import React from 'react';\nimport Alert from 'react-bootstrap/Alert';\nimport { NavLink } from 'react-router-dom';\n\nconst About = () => {\n    return (\n        <div className=\"mainContainer\">\n            <Alert variant=\"primary\">\n            <Alert.Heading>About the List</Alert.Heading>\n            <p>\n                Over ten years ago, I took a challenge to slowly convert my wardrobe to entirely \"Made in USA\" clothing. The goals were numerous — from having fewer items of higher-quality clothing that would last longer, to voting with my wallet and making a political statement for fair wages, supply chain transparency, and against adverse working conditions abroad. Not all companies listed have their entire product portfolio American-made —  the only requirement is that some product(s) should be manufactured in the USA — regardless of domestic or foreign materials. Please feel free to <NavLink to={`${process.env.PUBLIC_URL}/add`}>contribute</NavLink>!  \n            </p>\n            <hr />\n            <p className=\"mb-0\">\n                This is a personal coding project built as a Single Page Application (SPA) using <a href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">React</a> and <a href=\"https://react-bootstrap.github.io/\" target=\"_blank\" rel=\"noopener noreferrer\">Bootstrap</a> with a <a href=\"https://www.mongodb.com/cloud/atlas\" target=\"_blank\" rel=\"noopener noreferrer\">cloud MongoDB service</a>. Open source and proudly hosted on <a href=\"https://github.com/hdehal/made-in-usa\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a>.\n            </p>\n            </Alert>\n        </div>\n    );\n}\n\nexport default About;","import React from 'react';\n \nconst Error = () => {\n    return (\n        <div className=\"mainContainer\">\n            <p>404 Error: Page does not exist</p>\n        </div>\n    );\n}\n \nexport default Error;","import React from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\n\nconst Navigation = () => {\n    return (\n        <Navbar bg=\"light\" expand=\"lg\">\n            <Link to={'/'}><Navbar.Brand><span role=\"img\" aria-label=\"US flag\">🇺🇸</span> Made in USA List</Navbar.Brand></Link>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <NavLink to=\"/add\">Add Company</NavLink>\n                </Nav>\n            </Navbar.Collapse>\n            <Navbar.Collapse className=\"justify-content-end\">\n                <NavLink to=\"/about\">\n                    <Button size=\"sm\" variant=\"secondary\">About</Button>\n                </NavLink>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n}\n\nexport default Navigation;","import React, { Component } from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory from 'react-bootstrap-table2-filter';\n\n// Modularized component imports\nimport { item } from './stitchAuth';\nimport { tableColumns } from './tableColumns';\n\nclass DisplayTable extends Component {\n\n    // Initial state\n    constructor(props){\n        super(props);\n\n        this.state = {\n          data: []\n        }\n      }\n  \n      // Find database documents\n      async getData() {  \n        (await item())\n        .find({\"isVerified\":true})\n          .toArray()\n          .then(data => \n            data.map(x=>{ return { ...x, id: x._id.toString()}; })\n          ).then(data => this.setState({data}))\n  \n          // Error logging\n          .catch(err => {\n            console.warn(\"Error:\", err);\n          });\n      }\n  \n      componentDidMount(){\n        this.getData();\n      }\n\n  render() {\n\n      // Define selectRow\n      /* const selectRow = {\n        mode: 'radio',\n        clickToSelect: true,\n        selectColumnPosition: 'right',\n        hideSelectAll: true,\n        onSelect: this.props.handleOnSelectProp\n      }; */\n\n      // Default sorting\n      const defaultSorted = [{\n        dataField: 'company',\n        order: 'asc'\n      }];\n\n    return(\n        <div>\n          <BootstrapTable\n            keyField=\"id\"\n            data={this.state.data}\n            columns={tableColumns}\n            // selectRow={ selectRow }\n            filter={ filterFactory() }\n            defaultSorted={ defaultSorted } \n            striped\n            hover\n            condensed\n            bootstrap4\n          />\n        </div>\n    )\n  }\n}\n\nexport default DisplayTable;","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport ReactGA from 'react-ga';\n\n// Modularized component imports\nimport Home from './components/home';\nimport Add from './components/add';\nimport About from './components/about';\nimport Error from './components/error';\nimport Navigation from './components/navigation';\nimport DisplayTable from './components/displayTable';\n\nfunction initializeReactGA() {\n  ReactGA.initialize('UA-159568942-1');\n  ReactGA.pageview(window.location.pathname + window.location.search);\n}\n\ninitializeReactGA()\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      selected: []\n    }\n\n    this.handleOnSelect = this.handleOnSelect.bind(this)\n  }\n\n    // Delete functionality setState\n    handleOnSelect(row, isSelect){\n      // If row selected setState\n      if (isSelect) {\n          console.log(row)\n          this.setState({\n          selected: row.id\n          })\n      // Otherwise clear the state\n      } else {\n          console.log(row)\n          this.setState({\n          selected: []\n          })\n      }\n      }\n\n  render() {\n\n    return(\n\n      <BrowserRouter basename=\"/st\">\n\n        <Navigation />\n          <Switch>\n            <Route path=\"/\" component={Home} exact/>\n            <Route path=\"/add\" component={() => <Add selected={this.state.selected} />} />\n            <Route path=\"/about\" component={About}/>\n            <Route component={Error}/>\n          </Switch>\n\n          <DisplayTable handleOnSelectProp={this.handleOnSelect} />\n\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n  <App />\n  </BrowserRouter>, document.getElementById('root'));"],"sourceRoot":""}